services:
  kafka:
    image: confluentinc/confluent-local:7.4.3
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092" # for client connections
      - "9101:9101" # JMX
    restart: unless-stopped
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      CLUSTER_ID: 'K0EA9p0yEe6MkAAAAkKsEg'

  kafka-init-topics:
    image: confluentinc/confluent-local:7.4.3
    container_name: kafka-init-topics
    depends_on:
      - kafka
    command: "bash -c \
              'kafka-topics --create --topic stats.user-actions.v1 \
                           --partitions 1 --replication-factor 1 --if-not-exists \
                           --bootstrap-server kafka:29092 && \
               kafka-topics --create --topic stats.events-similarity.v1 \
                           --partitions 1 --replication-factor 1 --if-not-exists \
                           --bootstrap-server kafka:29092'"
    init: true

  category-db:
    image: postgres:16.1
    container_name: category-db
    environment:
      POSTGRES_USER: category
      POSTGRES_PASSWORD: category123
      POSTGRES_DB: category
    ports:
      - "5433:5432"
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  event-db:
    image: postgres:16.1
    container_name: event-db
    environment:
      POSTGRES_USER: event
      POSTGRES_PASSWORD: event123
      POSTGRES_DB: event
    ports:
      - "5434:5432"
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  user-db:
    image: postgres:16.1
    container_name: user-db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: user123
      POSTGRES_DB: user
    ports:
      - "5435:5432"
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  request-db:
    image: postgres:16.1
    container_name: request-db
    environment:
      POSTGRES_USER: request
      POSTGRES_PASSWORD: request123
      POSTGRES_DB: request
    ports:
      - "5436:5432"
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  compilation-db:
    image: postgres:16.1
    container_name: compilation-db
    environment:
      POSTGRES_USER: compilation
      POSTGRES_PASSWORD: compilation123
      POSTGRES_DB: compilation
    ports:
      - "5437:5432"
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  comment-db:
    image: postgres:16.1
    container_name: comment-db
    environment:
      POSTGRES_USER: comment
      POSTGRES_PASSWORD: comment123
      POSTGRES_DB: comment
    ports:
      - "5438:5432"
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  stats-db:
    image: postgres:16.1
    container_name: stats-db
    environment:
      POSTGRES_USER: stats
      POSTGRES_PASSWORD: stats123
      POSTGRES_DB: stats
    ports:
      - "5439:5432"
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

